name: Rust

on:
  push:
    tags:
      - "v*.*.*"
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  MACOSX_DEPLOYMENT_TARGET: "14.5"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest
            arch: x86_64
          - os: windows-latest
            arch: x86
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@2.32.0
        with:
          php-version: '8.3'

      - name: Build for ${{ matrix.os }} ${{ matrix.os == 'windows-latest' && matrix.arch || '' }}
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            if [[ "${{ matrix.arch }}" == "x86" ]]; then
              echo "Building 32-bit Windows..."
              cargo build --release --target=i686-pc-windows-msvc
            else
              echo "Building 64-bit Windows..."
              cargo build --release --target=x86_64-pc-windows-msvc
            fi
          else
            cargo build --release
          fi

      - name: List build artifacts
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            if [[ "${{ matrix.arch }}" == "x86" ]]; then
              ls -l target/i686-pc-windows-msvc/release/
            else
              ls -l target/x86_64-pc-windows-msvc/release/
            fi
          else
            ls -l target/release/
          fi

      - name: Determine artifact path
        id: artifact_path
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            if [[ "${{ matrix.arch }}" == "x86" ]]; then
              echo "path=target/i686-pc-windows-msvc/release/tgcrypto.dll" >> $GITHUB_OUTPUT
            else
              echo "path=target/x86_64-pc-windows-msvc/release/tgcrypto.dll" >> $GITHUB_OUTPUT
            fi
          else
            echo "path=target/release/libtgcrypto*" >> $GITHUB_OUTPUT
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{ matrix.os == 'windows-latest' && matrix.arch || 'binary' }}
          path: ${{ steps.artifact_path.outputs.path }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      discussions: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Set release tag
        id: set_tag
        run: |
          VERSION=$(grep -oP -m 1 'version = "\K[\w.]+' Cargo.toml)
          echo "Library Version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Zip Windows artifacts
        run: |
          find artifacts -type f -name "*.dll" -print0 | xargs -0 zip -j artifacts/windows.zip
      - name: Zip Linux artifacts
        run: |
          find artifacts -type f -name "*.so" -print0 | xargs -0 zip -j artifacts/linux.zip
      - name: Zip macOS artifacts
        run: |
          find artifacts -type f -name "*.dylib" -print0 | xargs -0 zip -j artifacts/macos.zip

      - name: Create Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: "v${{ steps.set_tag.outputs.version }}"
          files: |
            artifacts/windows.zip
            artifacts/linux.zip
            artifacts/macos.zip


        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
